// public/embed.min.js


(function () {
    // Configuration for the chatbot
    const config = window.embeddedChatbotConfig || {};


    // Reference to the playground chatbot API
    const playgroundChatbotId = config.chatbotId || 'defaultChatbotId';


    // Create a chat widget container
    const chatContainer = document.createElement('div');
    chatContainer.id = 'chatbot-widget';
    // chatContainer.style = `
    //     border: none;
    //     position: fixed;
    //     top: unset;
    //     right: 0px;
    //     left: unset;
    //     bottom: 0px;
    //     width: 100%;
    //     height: calc(100dvh - 100px);
    //     max-height: 100dvh;
    //     border-radius: 12px 12px 0 0;
    //     z-index: 2147483646;
    //     overflow: hidden;
    //     background-color: white;
    //     box-shadow: rgba(150, 150, 150, 0.2) 0px 10px 30px 0px, rgba(150, 150, 150, 0.2) 0px 0px 0px 1px;
    //     @media (min-width: 640px) {
    //         position: fixed;
    //         bottom: 5rem;
    //         right: 1rem;
    //         width: 380px;
    //         height: 85dvh;
    //         max-height: 700px;
    //         border-radius: 0.75rem;
    //         display: block;
    //         z-index: 2147483646;
    //         overflow: hidden;
    //         background-color: white;
    //         left: unset;
    //         top: unset;
    //     }
    // `;


    // Add <br> after each line in the chat widget
    const addLineBreaks = (content) => {
        return content.split('\n').join('');
    };

    // Function to handle responsive design
    function handleResponsiveDesign() {
        const isMobile = /iPhone|iPad|iPod|Android/i.test(window.navigator.userAgent);
        const currentSettings = window.chatbotSettings;
        
        const commonStyles = `
            background-image: ${currentSettings?.chatBackgroundUrl ? `url(${currentSettings.chatBackgroundUrl})` : 'none'};
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        `;

        if (!isMobile) {
            chatContainer.style = `
                display: none;
                border: none;
                position: fixed;
                flex-direction: column;
                justify-content: space-between;
                box-shadow: rgba(150, 150, 150, 0.2) 0px 10px 30px 0px, rgba(150, 150, 150, 0.2) 0px 0px 0px 1px;
                bottom: 5rem;
                ${currentSettings?.bubbleAlignment === 'right' ? 'right: 1rem; left: unset;' : 'left: 1rem; right: unset;'}
                width: ${currentSettings?.chatWidth || 448}px;
                height: 85dvh;
                max-height: 824px;
                border-radius: 0.75rem;
                z-index: 2147483646;
                overflow: hidden;
                background-color: white;
                top: unset;
                ${commonStyles}
            `;
        } else {
            // Mobile styles remain centered
            chatContainer.style = `
                display: none;
                border: none;
                position: fixed;
                flex-direction: column;
                justify-content: space-between;
                box-shadow: rgba(150, 150, 150, 0.2) 0px 10px 30px 0px, rgba(150, 150, 150, 0.2) 0px 0px 0px 1px;
                bottom: 0px;
                right: 0px;
                width: 100%;
                height: calc(100dvh - 100px);
                max-height: 824px;
                border-radius: 0px;
                z-index: 2147483646;
                overflow: hidden;
                background-color: white;
                left: unset;
                top: 100px;
                ${commonStyles}
            `;
        }
    }

    // Listen to window resize event
    window.addEventListener('resize', handleResponsiveDesign);

    // Call the function initially to set the correct styles
    // handleResponsiveDesign();
    // Add mobile styles
    const chatbotStyles = `
        #close-button {       
            cursor: pointer;
            position: fixed;
            top: 114px;
            right: 10px;
            font-size: 24px;
            &:hover {
                color: rgb(159 166 179);
            }
            @media (max-width: 640px) {
                display: block;
            }
        }
        #chatbot-widget-icon {
            position: fixed;
            bottom: 20px;
            font-size: 30px;
            cursor: pointer;
            background: black;
            border-radius: 100px;
            z-index: 1001;
            width: 55px;
            height: 55px;           
            display: flex;
            justify-content: center;
            align-items: center;
            background-size: cover;
            background-position: center;
            &:hover {
                opacity: 0.9;
            }
        }
    `;
    const styleSheet = document.createElement("style");
    document.head.appendChild(styleSheet);
    styleSheet.innerText = addLineBreaks(chatbotStyles);


    // Fetch chatbot settings
    async function fetchChatbotSettings() {
        try {
            const response = await fetch(`${window.location.protocol}//${window.embeddedChatbotConfig.domain}/api/chatbot/interface-settings?chatbotId=${playgroundChatbotId}`);
            const settings = await response.json();
            console.log('Fetched settings in embed.min.js:', settings); // Log fetched settings
            return settings;
        } catch (error) {
            console.error('Error fetching chatbot settings:', error);
            return null;
        }
    }


    // Update the chatIcon positioning when settings change
    function updateChatIconPosition() {
        const currentSettings = window.chatbotSettings;
        const chatIcon = document.getElementById('chatbot-widget-icon');
        if (chatIcon) {
            chatIcon.style.right = currentSettings?.bubbleAlignment === 'right' ? '20px' : 'unset';
            chatIcon.style.left = currentSettings?.bubbleAlignment === 'left' ? '20px' : 'unset';
        }
    }


    // Create and initialize chat elements
    async function initializeChatElements() {
        const settings = await fetchChatbotSettings();
        
        // Store settings globally
        window.chatbotSettings = settings;

        // Create chat icon
        const chatIcon = document.createElement('div');
        chatIcon.id = 'chatbot-widget-icon';
        if (settings?.chatIconUrl) {
            chatIcon.style.backgroundImage = `url(${settings.chatIconUrl})`;
            chatIcon.innerHTML = '';
        } else {
            chatIcon.innerHTML = '<div>ðŸ’¬</div>';
        }
        
        // Set initial position based on settings
        chatIcon.style.right = settings?.bubbleAlignment === 'right' ? '20px' : 'unset';
        chatIcon.style.left = settings?.bubbleAlignment === 'left' ? '20px' : 'unset';
        
        document.body.appendChild(chatIcon);


        // Create an iframe for the chatbot content
        const chatIframe = document.createElement('iframe');
        chatIframe.style.width = '100%';
        chatIframe.style.height = '100%';
        chatIframe.style.border = 'none';
        chatIframe.style.display = 'block';
        chatIframe.src = `${window.location.protocol}//${window.embeddedChatbotConfig.domain}/chatbot/${playgroundChatbotId}`;


        // Create a close button
        const closeButton = document.createElement('div');
        closeButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x h-full w-full p-1"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg>`;
        closeButton.id = 'close-button';
        closeButton.style.cursor = 'pointer';
        closeButton.style.position = 'fixed';
        closeButton.style.top = '115px';
        closeButton.style.right = '10px';
        closeButton.style.fontSize = '24px';
        closeButton.style.width = '32px';
        // chatContainer.appendChild(closeButton);


        // Add auto-show functionality
        if (settings?.autoShowDelay && settings.autoShowDelay >= 0) {
            setTimeout(() => {
                if (chatContainer.style.display === 'none' || chatContainer.style.display === '') {
                    toggleChatWindow();
                }
            }, settings.autoShowDelay * 1000); // Convert seconds to milliseconds
        }

        // Function to toggle chat window visibility
        async function toggleChatWindow() {
            if (chatContainer.style.display === 'none' || chatContainer.style.display === '') {
                chatContainer.style.display = 'block';
                closeButton.style.display = 'block';
                if (!settings?.chatIconUrl) {
                    chatIcon.innerHTML = `<svg id="closeIcon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2.3" stroke="white" width="24" height="24">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
                    </svg>`;
                }
                document.getElementsByTagName('body')[0].style.overflow = 'hidden';
            } else {
                chatContainer.style.display = 'none';
                closeButton.style.display = 'none';
                if (!settings?.chatIconUrl) {
                    chatIcon.innerHTML = '<div>ðŸ’¬</div>';
                }
                document.getElementsByTagName('body')[0].style.overflowY = 'scroll';
            }
        }


        // Add event listener to close button
        closeButton.addEventListener('click', () => {
            chatContainer.style.display = 'none';
            if (!settings?.chatIconUrl) {
                chatIcon.innerHTML = '<div>ðŸ’¬</div>';
            }
            document.getElementsByTagName('body')[0].style.overflowY = 'scroll';
        });

        // Add event listener to chat icon
        chatIcon.addEventListener('click', toggleChatWindow);
        document.body.appendChild(chatContainer);
        chatContainer.appendChild(chatIframe);
        handleResponsiveDesign();

        // Initially hide the chat window
        // chatContainer.style.display = 'none';
        window.addEventListener('message', function (event) {
            if (event.data.type === 'chatbot-settings-update') {
                // Update stored settings
                window.chatbotSettings = event.data.settings;
                // Re-apply responsive design with new settings
                handleResponsiveDesign();
                // Update chat icon position
                updateChatIconPosition();
            } else if (event.data.action === 'closeIframe') {
                toggleChatWindow();
            }
        });

        document.addEventListener('click', function(event) {
            if (!chatContainer.contains(event.target) && !chatIcon.contains(event.target)) {
                chatContainer.style.display = 'none';
                if (!settings?.chatIconUrl) {
                    chatIcon.innerHTML = '<div>ðŸ’¬</div>';
                }
                document.getElementsByTagName('body')[0].style.overflowY = 'scroll';
            }
        });
    }


    // Initialize the chat elements
    initializeChatElements();
})();