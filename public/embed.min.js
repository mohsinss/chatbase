// public/embed.min.js

(function () {
    // Configuration for the chatbot
    const settings = window.embeddedChatbotConfig || {};

    // Reference to the playground chatbot API
    const playgroundChatbotId = settings.chatbotId || 'defaultChatbotId';

    // Create a chat widget container
    const chatContainer = document.createElement('div');
    chatContainer.id = 'chatbot-widget';

    // Add <br> after each line in the chat widget
    const addLineBreaks = (content) => {
        return content.split('\n').join('');
    };

    // Function to handle responsive design
    function handleResponsiveDesign(currentSettings) {
        const settings = currentSettings || {};
        const isMobile = /iPhone|iPad|iPod|Android/i.test(window.navigator.userAgent);
        const isDarkMode = settings.theme === 'dark';
        const backgroundColor = isDarkMode ? '#111827' : 'white';
        const boxShadowColor = isDarkMode ? 'rgba(0, 0, 0, 0.3)' : 'rgba(150, 150, 150, 0.2)';
        
        if (!isMobile) {
            chatContainer.style = `
                    display: none;
                    border: none;
                    position: fixed;
                    flex-direction: column;
                    justify-content: space-between;
                    box-shadow: ${boxShadowColor} 0px 10px 30px 0px, ${boxShadowColor} 0px 0px 0px 1px;
                    bottom: 90px;
                    right: 20px;
                    width: ${settings.chatWidth || 448}px;
                    height: 600px;
                    max-height: 80vh;
                    border-radius: 0.75rem;
                    z-index: 2147483646;
                    overflow: hidden;
                    background-color: ${backgroundColor};
                    left: unset;
                    top: unset;
            `;
        } else {
            const viewportHeight = window.innerHeight ? `${window.innerHeight}px` : '100vh';
            chatContainer.style = `
                    display: none;
                    border: none;
                    position: fixed;
                    flex-direction: column;
                    justify-content: space-between;
                    box-shadow: ${boxShadowColor} 0px 10px 30px 0px, ${boxShadowColor} 0px 0px 0px 1px;
                    bottom: 0px;
                    right: 0px;
                    width: 100%;
                    height: calc(${viewportHeight} - 72px);
                    max-height: ${viewportHeight};
                    max-height: 100dvh;
                    border-radius: 0px;
                    z-index: 2147483646;
                    overflow: hidden;
                    background-color: ${backgroundColor};
                    left: unset;
                    top: unset;
            `;
        }
    }

    // Listen to window resize event
    window.addEventListener('resize', () => handleResponsiveDesign());

    // Add mobile styles
    const chatbotStyles = `
        #close-button {       
            cursor: pointer;
            position: fixed;
            top: 114px;
            right: 10px;
            font-size: 24px;
            &:hover {
                color: rgb(159 166 179);
            }
            @media (max-width: 640px) {
                display: block;
            }
        }
        #chatbot-widget-icon {
            position: fixed;
            bottom: 20px;
            right: 20px;
            font-size: 30px;
            cursor: pointer;
            background: black;
            border-radius: 100px;
            z-index: 1001;
            width: 55px;
            height: 55px;           
            display: flex;
            justify-content: center;
            align-items: center;
            background-size: cover;
            background-position: center;
            &:hover {
                opacity: 0.9;
            }
        }
        #chatbot-tooltip {
          position: fixed;
          background: white;
          cursor: pointer;
          color: black;
          padding: 20px 18px;
          font-size: 16px;
          border-radius: 12px;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
          transform: translateY(-50%);
          z-index: 9999;
          width: 320px;
          white-space: normal;
          display: flex;
          align-items: center;
          border: 1px solid #f0f0f0;
        }
        
        #chatbot-tooltip::after {
          content: "";
          position: absolute;
          top: 50%;
          right: -10px;
          transform: translateY(-50%);
          border-width: 10px 0 10px 10px;
          border-style: solid;
          border-color: transparent transparent transparent white;
        }
        
        #chatbot-tooltip-close {
          position: absolute;
          top: -8px;
          right: -8px;
          width: 20px;
          height: 20px;
          cursor: pointer;
          background: white;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          font-size: 12px;
          color: #555;
          border: 1px solid #eaeaea;
          box-shadow: 0 2px 4px rgba(0,0,0,0.1);
          z-index: 10000;
        }
        
        #chatbot-tooltip-content {
          width: 100%;
          padding: 0 6px;
          font-weight: 500;
          line-height: 1.4;
        }

        #chatbot-notification {
          position: absolute;
          top: -5px;
          right: -5px;
          width: 20px;
          height: 20px;
          background: #d02339;
          color: white;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          font-size: 12px;
          font-weight: bold;
          box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }

        .fade-in {
          animation: fadeIn 0.5s ease-in;
        }

        @keyframes fadeIn {
          from { opacity: 0; }
          to { opacity: 1; }
        }
    `;
    const styleSheet = document.createElement("style");
    document.head.appendChild(styleSheet);
    styleSheet.innerText = addLineBreaks(chatbotStyles);

    // Fetch chatbot settings
    async function fetchChatbotSettings() {
        try {
            const response = await fetch(`${window.location.protocol}//${window.embeddedChatbotConfig.domain}/api/chatbot/interface-settings?chatbotId=${playgroundChatbotId}`);
            const settings = await response.json();
            return settings;
        } catch (error) {
            console.error('Error fetching chatbot settings:', error);
            return null;
        }
    }

    // Create and initialize chat elements
    async function initializeChatElements() {
        const settings = await fetchChatbotSettings();
        console.log(settings);

        // Create a chat icon with the custom icon if available
        const chatIcon = document.createElement('div');
        if (settings?.chatIconUrl) {
            chatIcon.style.backgroundImage = `url(${settings.chatIconUrl})`;
            chatIcon.innerHTML = ''; // Clear default emoji if using custom icon
        } else {
            // Apply different background color based on theme
            chatIcon.style.background = settings?.theme === 'dark' ? '#1e3a8a' : 'black'; // Dark blue for dark theme
            chatIcon.innerHTML = '<div>ðŸ’¬</div>'; // Default emoji
        }
        chatIcon.id = 'chatbot-widget-icon';
        document.body.appendChild(chatIcon);

        // Tooltip element
        const tooltip = document.createElement("div");
        tooltip.id = "chatbot-tooltip";
        tooltip.style.display = "none";

        // Tooltip content
        const tooltipContent = document.createElement("div");
        tooltipContent.id = "chatbot-tooltip-content";
        tooltipContent.innerHTML = settings?.initialMessage ?? "Psst... Wanna know the ultimate secret to 3x revenue growth? ðŸ’°";

        // Close button
        const tooltipClose = document.createElement("div");
        tooltipClose.id = "chatbot-tooltip-close";
        tooltipClose.innerHTML = "âœ•";
        tooltip.appendChild(tooltipClose);

        // Notification badge
        const notification = document.createElement("div");
        notification.id = "chatbot-notification";
        notification.innerHTML = "1";
        chatIcon.appendChild(notification);

        tooltip.appendChild(tooltipContent);

        if (settings?.theme == 'dark') {
            tooltip.style.backgroundColor = 'black';
            tooltip.style.color = 'white';
            tooltip.style.borderColor = '#333';
            
            // Update the tooltip arrow for dark mode
            const darkModeArrow = document.createElement('style');
            darkModeArrow.textContent = `
                #chatbot-tooltip::after {
                    border-color: transparent transparent transparent black;
                }
            `;
            document.head.appendChild(darkModeArrow);
        }

        // Create audio element for notification sound
        const notificationSound = document.createElement("audio");
        notificationSound.src = "https://assets.mixkit.co/sfx/preview/mixkit-software-interface-start-2574.mp3"; // Default notification sound
        notificationSound.id = "chatbot-notification-sound";
        document.body.appendChild(notificationSound);

        document.body.appendChild(tooltip);

        // Tooltip positioning logic
        const positionTooltip = () => {
            const iconRect = chatIcon.getBoundingClientRect();
            const tooltipRect = tooltip.getBoundingClientRect();
            
            tooltip.style.left = `${iconRect.left - tooltip.offsetWidth - 15}px`;
            tooltip.style.top = `${iconRect.top + iconRect.height / 2}px`;

            // Adjust for mobile screens
            if (window.innerWidth <= 640) {
                tooltip.style.width = "260px";
                tooltip.style.left = `${(window.innerWidth - tooltipRect.width) / 2}px`;
                tooltip.style.top = `${iconRect.top - tooltipRect.height - 10}px`;
                tooltip.style.transform = "none";
            } else {
                tooltip.style.left = `${iconRect.left - tooltipRect.width - 15}px`;
                tooltip.style.top = `${iconRect.top + iconRect.height / 2}px`;
                tooltip.style.transform = "translateY(-50%)";
            }

            // Ensure tooltip stays within viewport
            if (tooltipRect.left < 20) {
                tooltip.style.left = "20px";
                tooltip.style.transform = "none";

                // Move the arrow to the right side when tooltip is against the left edge
                const tooltipAfter = document.createElement('style');
                tooltipAfter.textContent = `
                    #chatbot-tooltip::after {
                        right: auto;
                        left: 100%;
                        border-width: 10px 0 10px 10px;
                        border-color: transparent transparent transparent white;
                    }
                `;
                document.head.appendChild(tooltipAfter);
            }
        };

        // Play sound when tooltip appears
        setTimeout(() => {
            notificationSound.play().catch(e => console.log("Auto-play prevented:", e));
        }, 100);

        // Close tooltip when X is clicked
        tooltipClose.addEventListener("click", (e) => {
            e.stopPropagation();
            tooltip.remove();
        });

        // Create an iframe for the chatbot content
        const chatIframe = document.createElement('iframe');
        chatIframe.style.width = '100%';
        chatIframe.style.height = '100%';
        chatIframe.style.border = 'none';
        chatIframe.style.display = 'block';
        chatIframe.src = `${window.location.protocol}//${window.embeddedChatbotConfig.domain}/chatbot/${playgroundChatbotId}`;
        chatContainer.appendChild(chatIframe);
        document.body.appendChild(chatContainer);

        // Create a close button
        const closeButton = document.createElement('div');
        closeButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x h-full w-full p-1"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg>`;
        closeButton.id = 'close-button';
        closeButton.style.display = 'none';
        closeButton.style.position = 'fixed';
        closeButton.style.top = '10px';
        closeButton.style.right = '10px';
        closeButton.style.zIndex = '2147483647';
        closeButton.style.fontSize = '24px';
        closeButton.style.width = '30px';
        closeButton.style.height = '30px';
        closeButton.style.cursor = 'pointer';
        closeButton.style.backgroundColor = 'rgba(0,0,0,0.1)';
        closeButton.style.borderRadius = '50%';
        closeButton.style.display = 'flex';
        closeButton.style.alignItems = 'center';
        closeButton.style.justifyContent = 'center';

        // Add auto-show functionality
        if (settings?.autoShowDelay && settings.autoShowDelay >= 0) {
            setTimeout(() => {
                if (chatContainer.style.display === 'none' || chatContainer.style.display === '') {
                    toggleChatWindow();
                }
            }, settings.autoShowDelay * 1000); // Convert seconds to milliseconds
        }

        // Show tooltip after a delay based on tooltipDelay setting
        if (settings?.tooltipDelay !== -1) { // Don't show if set to "never"
            const delayTime = settings?.tooltipDelay !== undefined ? settings.tooltipDelay * 1000 : 1000;

            setTimeout(() => {
                tooltip.style.display = "block";
                tooltip.classList.add("fade-in");
                positionTooltip();

                // Play sound when tooltip appears
                notificationSound.play().catch(e => console.log("Auto-play prevented:", e));

                // Auto-hide after a while
                setTimeout(() => {
                    if (tooltip && document.body.contains(tooltip)) {
                        tooltip.remove();
                    }
                }, 100000);
            }, delayTime);
        }

        // Hide tooltip on click and show chat
        tooltip.addEventListener("click", () => {
            tooltip.remove();
            toggleChatWindow();
        });

        // Reposition tooltip on window resize
        window.addEventListener("resize", positionTooltip);

        // Function to toggle chat window
        function toggleChatWindow(e) {
            if (e) {
                e.preventDefault();
                e.stopPropagation();
            }

            // Check if click is inside the iframe
            if (e && e.target && chatIframe.contains(e.target)) {
                return;
            }

            if (chatContainer.style.display === 'none' || chatContainer.style.display === '') {
                // Remove tooltip when opening chat
                if (tooltip && document.body.contains(tooltip)) {
                    tooltip.remove();
                }

                // Apply responsive design before showing
                handleResponsiveDesign(settings);

                // Show chat container
                chatContainer.style.display = 'flex';

                // Show close button for mobile
                // if (window.innerWidth <= 640) {
                //     closeButton.style.display = 'flex';
                //     document.body.appendChild(closeButton);
                // }

                // Add loading spinner
                // const loadingSpinner = document.createElement('div');
                // loadingSpinner.id = 'chatbot-loading-spinner';
                // loadingSpinner.innerHTML = '<div class="spinner"></div>';
                // chatContainer.appendChild(loadingSpinner);

                // // Remove spinner when iframe is fully loaded
                // chatIframe.onload = () => {
                //     if (loadingSpinner && chatContainer.contains(loadingSpinner)) {
                //         chatContainer.removeChild(loadingSpinner);
                //     }
                // };

                // Prevent page scrolling
                const currentScrollPosition = window.scrollY;
                window.scrollTo(0, currentScrollPosition);

                // Change chat icon to X with user message color background
                if (settings?.userMessageColor) {
                    chatIcon.style.background = settings.userMessageColor;
                    chatIcon.innerHTML = '<div style="color: white; font-size: 24px;">âœ•</div>';
                } else {
                    chatIcon.innerHTML = '<div style="font-size: 24px;">âœ•</div>';
                }

                // Remove notification badge
                const notificationBadge = document.getElementById('chatbot-notification');
                if (notificationBadge) {
                    notificationBadge.remove();
                }

                // Add click event handler to document to prevent scroll
                document.addEventListener('wheel', preventScroll, { passive: false });
                document.addEventListener('touchmove', preventScroll, { passive: false });
            } else {
                // Hide chat container
                chatContainer.style.display = 'none';

                // Hide close button
                closeButton.style.display = 'none';
                if (document.body.contains(closeButton)) {
                    document.body.removeChild(closeButton);
                }

                // Remove scroll prevention
                document.removeEventListener('wheel', preventScroll);
                document.removeEventListener('touchmove', preventScroll);

                // Restore original chat icon
                if (settings?.chatIconUrl) {
                    chatIcon.style.background = '';
                    chatIcon.style.backgroundImage = `url(${settings.chatIconUrl})`;
                    chatIcon.innerHTML = '';
                } else {
                    chatIcon.style.background = settings?.theme === 'dark' ? '#1e3a8a' : 'black'; // Dark blue for dark theme
                    chatIcon.innerHTML = '<div>ðŸ’¬</div>';
                }
            }
        }

        // Prevent scrolling when chat is open
        function preventScroll(e) {
            // Allow scrolling inside the iframe
            if (e.target === chatIframe || chatIframe.contains(e.target)) {
                return true;
            }
            e.preventDefault();
            return false;
        }

        // Apply the responsive design initially
        handleResponsiveDesign(settings);

        // Add click event to chat icon
        chatIcon.addEventListener('click', toggleChatWindow);

        // Add click event to close button
        closeButton.addEventListener('click', toggleChatWindow);

        // Listen for message to update settings when changed in the admin panel
        window.addEventListener('message', (event) => {
            if (event.data && event.data.type === 'chatbot-settings-update') {
                console.log('Received settings update:', event.data.settings);
                // Update settings object with new values
                const updatedSettings = { ...settings, ...event.data.settings };
                
                // Update chat icon background if theme changed and no custom icon
                if (!updatedSettings.chatIconUrl && chatIcon) {
                    chatIcon.style.background = updatedSettings.theme === 'dark' ? '#1e3a8a' : 'black';
                }

                // Apply any visual changes based on updated settings
                handleResponsiveDesign(updatedSettings);

                // If tooltip exists and is visible, update it based on new settings
                if (tooltip && document.body.contains(tooltip)) {
                    // Update tooltip style based on theme
                    tooltip.style.backgroundColor = updatedSettings.theme === 'dark' ? 'black' : 'white';
                    tooltip.style.color = updatedSettings.theme === 'dark' ? 'white' : 'black';
                    tooltip.style.borderColor = updatedSettings.theme === 'dark' ? '#333' : '#f0f0f0';
                    
                    // Update the tooltip arrow color
                    const arrowStyle = document.createElement('style');
                    arrowStyle.textContent = `
                        #chatbot-tooltip::after {
                            border-color: transparent transparent transparent ${updatedSettings.theme === 'dark' ? 'black' : 'white'};
                        }
                    `;
                    document.head.appendChild(arrowStyle);

                    // Update content
                    tooltipContent.innerHTML = updatedSettings.initialMessage || "Psst... Wanna know the ultimate secret to 3x revenue growth? ðŸ’°";

                    // Handle tooltip delay update
                    if (updatedSettings.tooltipDelay === -1) {
                        // If tooltip should never be shown, remove it
                        tooltip.remove();
                    } else {
                        // Reposition with updated settings
                        positionTooltip();
                    }
                } else if (updatedSettings.tooltipDelay !== -1 && updatedSettings.tooltipDelay !== undefined) {
                    // If tooltip isn't visible but should be, show it after the specified delay
                    const delayTime = updatedSettings.tooltipDelay * 1000;

                    // Only show if not already shown (to prevent duplicate tooltips)
                    if (!document.getElementById('chatbot-tooltip')) {
                        setTimeout(() => {
                            // Create a new tooltip if it doesn't exist
                            const newTooltip = document.createElement("div");
                            newTooltip.id = "chatbot-tooltip";
                            newTooltip.style.display = "block";

                            // Tooltip content
                            const newTooltipContent = document.createElement("div");
                            newTooltipContent.id = "chatbot-tooltip-content";
                            newTooltipContent.innerHTML = updatedSettings.initialMessage || "Psst... Wanna know the ultimate secret to 3x revenue growth? ðŸ’°";

                            // Close button
                            const newTooltipClose = document.createElement("div");
                            newTooltipClose.id = "chatbot-tooltip-close";
                            newTooltipClose.innerHTML = "âœ•";
                            newTooltip.appendChild(newTooltipClose);

                            newTooltip.appendChild(newTooltipContent);

                            if (updatedSettings.theme === 'dark') {
                                newTooltip.style.backgroundColor = 'black';
                                newTooltip.style.color = 'white';
                            }

                            document.body.appendChild(newTooltip);
                            newTooltip.classList.add("fade-in");

                            // Position the new tooltip
                            const iconRect = chatIcon.getBoundingClientRect();
                            newTooltip.style.left = `${iconRect.left - newTooltip.offsetWidth - 15}px`;
                            newTooltip.style.top = `${iconRect.top + iconRect.height / 2}px`;

                            // Play sound
                            notificationSound.play().catch(e => console.log("Auto-play prevented:", e));

                            // Add event listener for close button
                            newTooltipClose.addEventListener("click", (e) => {
                                e.stopPropagation();
                                newTooltip.remove();
                            });

                            // Add event listener for tooltip click
                            newTooltip.addEventListener("click", () => {
                                newTooltip.remove();
                                toggleChatWindow();
                            });
                        }, delayTime);
                    }
                }
            }
        });

        window.addEventListener('message', function (event) {
            if (event.data.action === 'closeIframe') {
                toggleChatWindow();
            }
        });
    }

    // Initialize chat elements
    initializeChatElements();
})(); 