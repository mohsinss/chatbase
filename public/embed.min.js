// public/embed.min.js


(function () {
    // Configuration for the chatbot
    const config = window.embeddedChatbotConfig || {};


    // Reference to the playground chatbot API
    const playgroundChatbotId = config.chatbotId || 'defaultChatbotId';


    // Create a chat widget container
    const chatContainer = document.createElement('div');
    chatContainer.id = 'chatbot-widget';
    // chatContainer.style = `
    //     border: none;
    //     position: fixed;
    //     top: unset;
    //     right: 0px;
    //     left: unset;
    //     bottom: 0px;
    //     width: 100%;
    //     height: calc(100dvh - 100px);
    //     max-height: 100dvh;
    //     border-radius: 12px 12px 0 0;
    //     z-index: 2147483646;
    //     overflow: hidden;
    //     background-color: white;
    //     box-shadow: rgba(150, 150, 150, 0.2) 0px 10px 30px 0px, rgba(150, 150, 150, 0.2) 0px 0px 0px 1px;
    //     @media (min-width: 640px) {
    //         position: fixed;
    //         bottom: 5rem;
    //         right: 1rem;
    //         width: 380px;
    //         height: 85dvh;
    //         max-height: 700px;
    //         border-radius: 0.75rem;
    //         display: block;
    //         z-index: 2147483646;
    //         overflow: hidden;
    //         background-color: white;
    //         left: unset;
    //         top: unset;
    //     }
    // `;


    // Add <br> after each line in the chat widget
    const addLineBreaks = (content) => {
        return content.split('\n').join('');
    };

    // Function to handle responsive design
    function handleResponsiveDesign() {
        if (window.innerWidth >= 640) {
            chatContainer.style = `
                    border: none;
                    position: fixed;
                    flex-direction: column;
                    justify-content: space-between;
                    box-shadow: rgba(150, 150, 150, 0.2) 0px 10px 30px 0px, rgba(150, 150, 150, 0.2) 0px 0px 0px 1px;
                    bottom: 5rem;
                    right: 1rem;
                    width: 448px;
                    height: 85dvh;
                    max-height: 824px;
                    border-radius: 0.75rem;
                    display: flex;
                    z-index: 2147483646;
                    overflow: hidden;
                    background-color: white;
                    left: unset;
                    top: unset;
            `;
        } else {
            chatContainer.style = `
                    border: none;
                    position: fixed;
                    flex-direction: column;
                    justify-content: space-between;
                    box-shadow: rgba(150, 150, 150, 0.2) 0px 10px 30px 0px, rgba(150, 150, 150, 0.2) 0px 0px 0px 1px;
                    bottom: 0px;
                    right: 0px;
                    width: 100%;
                    height: calc(100dvh - 100px);
                    max-height: 824px;
                    border-radius: 0px;
                    display: flex;
                    z-index: 2147483646;
                    overflow: hidden;
                    background-color: white;
                    left: unset;
                    top: 100px;
            `;
        }
    }

    // Listen to window resize event
    window.addEventListener('resize', handleResponsiveDesign);

    // Call the function initially to set the correct styles
    // handleResponsiveDesign();
    // Add mobile styles
    const chatbotStyles = `
        #close-button {       
            cursor: pointer;
            position: fixed;
            top: 114px;
            right: 10px;
            font-size: 24px;
            display: none;
            &:hover {
                color: rgb(159 166 179);
            }
            @media (max-width: 640px) {
                display: block;
            }
        }
        #chatbot-widget-icon {
            position: fixed;
            bottom: 20px;
            right: 20px;
            font-size: 30px;
            cursor: pointer;
            background: black;
            border-radius: 100px;
            z-index: 1001;
            width: 55px;
            height: 55px;           
            display: flex;
            justify-content: center;
            align-items: center;
            background-size: cover;
            background-position: center;
            &:hover {
                opacity: 0.9;
            }
        }
    `;
    const styleSheet = document.createElement("style");
    document.head.appendChild(styleSheet);
    styleSheet.innerText = addLineBreaks(chatbotStyles);


    // Fetch chatbot settings
    async function fetchChatbotSettings() {
        try {
            const response = await fetch(`${window.location.protocol}//${window.embeddedChatbotConfig.domain}/api/chatbot/interface-settings?chatbotId=${playgroundChatbotId}`);
            const settings = await response.json();
            return settings;
        } catch (error) {
            console.error('Error fetching chatbot settings:', error);
            return null;
        }
    }


    // Create and initialize chat elements
    async function initializeChatElements() {
        const settings = await fetchChatbotSettings();

        // Create a chat icon with the custom icon if available
        const chatIcon = document.createElement('div');
        if (settings?.chatIconUrl) {
            chatIcon.style.backgroundImage = `url(${settings.chatIconUrl})`;
            chatIcon.innerHTML = ''; // Clear default emoji if using custom icon
        } else {
            chatIcon.innerHTML = '<div>ðŸ’¬</div>'; // Default emoji
        }
        chatIcon.id = 'chatbot-widget-icon';
        document.body.appendChild(chatIcon);


        // Create an iframe for the chatbot content
        const chatIframe = document.createElement('iframe');
        chatIframe.style.width = '100%';
        chatIframe.style.height = '100%';
        chatIframe.style.border = 'none';
        chatIframe.src = `${window.location.protocol}//${window.embeddedChatbotConfig.domain}/chatbot/${playgroundChatbotId}`;
        chatContainer.appendChild(chatIframe);


        // Create a close button
        const closeButton = document.createElement('div');
        closeButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x h-full w-full p-1"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg>`;
        closeButton.id = 'close-button';
        chatContainer.appendChild(closeButton);


        // Function to toggle chat window visibility
        async function toggleChatWindow() {
            if (chatContainer.style.display === 'none' || chatContainer.style.display === '') {
                chatContainer.style.display = 'block';
                if (!settings?.chatIconUrl) {
                    chatIcon.innerHTML = `<svg id="closeIcon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2.3" stroke="white" width="24" height="24">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
                    </svg>`;
                }
                document.getElementsByTagName('body')[0].style.overflow = 'hidden';
            } else {
                chatContainer.style.display = 'none';
                if (!settings?.chatIconUrl) {
                    chatIcon.innerHTML = '<div>ðŸ’¬</div>';
                }
                document.getElementsByTagName('body')[0].style.overflowY = 'scroll';
            }
        }


        // Add event listener to close button
        closeButton.addEventListener('click', () => {
            chatContainer.style.display = 'none';
            if (!settings?.chatIconUrl) {
                chatIcon.innerHTML = '<div>ðŸ’¬</div>';
            }
            document.getElementsByTagName('body')[0].style.overflowY = 'scroll';
        });

        // Add event listener to chat icon
        chatIcon.addEventListener('click', toggleChatWindow);
        document.body.appendChild(chatContainer);
        handleResponsiveDesign();

        // Initially hide the chat window
        chatContainer.style.display = 'none';
    }


    // Initialize the chat elements
    initializeChatElements();
})();